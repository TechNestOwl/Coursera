JS modules:

Modules are .js files that export a function or functions. 
There are two main methods of exporting a module...
*   Default export:

    function addTwo(a,b){
        return a + b;
    };

    export default addTwo;

*   Named export:

    function addTwo(a,b){
        return a + b;
    }

    export {addTwo};


Importing a module is just as easy.

importing default: At the top of the import file..
    
    import default: import addTwo from "./addTwo.js"
    named import:   import {addTwo} from "./addTwo.js"



React treats lowrecase components as regualr HTML elements.
This is why capatilizing components is important to distinguish JSX components.  

Transpiling converts JSX into HTML.
 Babel does is this: it allows you to transpile JSX code (which cannot be understood by a browser) 
 into plain JavaScript code (which can be understood by a browser).




Organizing React File Structure:

Two Main Approaches..
1. Grouping by features.
2. Grouping by file type.

Don't nest folders too deep. Keep it simple.




        JSX:
JSX allows me as a developer to write HTML directly inside Javascript code. 
Once I pass props parameter to a funcitonal component, I can then access that objects properities with dot notation. 

Anything that is placed within curly braces in JSX, is essentially javascript code. 
